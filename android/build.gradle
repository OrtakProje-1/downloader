//import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer

buildscript {
    ext.kotlin_version = '1.6.10'
    ext.ktor_version = '1.6.5'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        //classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
    }
}

plugins {
    id "com.android.internal.library"
    id "kotlin-parcelize"
}

group 'com.example'
version '1.0-SNAPSHOT'







rootProject.allprojects {

    repositories {
        google()
        mavenCentral()
    }
}


/*
shadowJar {
    transform(ServiceFileTransformer) {
        path = 'META-INF/services'
        include 'org.eclipse.jetty.http.HttpFieldPreEncoder'
    }
}
*/


apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'



android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 16
    }

    packagingOptions {
        exclude 'META-INF/kotlinx-io.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
        exclude 'META-INF/kotlinx-coroutines-io.kotlin_module'
        exclude 'META-INF/kotlinx-coroutines-core.kotlin_module'
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-android:$ktor_version"
    implementation "io.ktor:ktor-utils-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-logging-jvm:$ktor_version"
    //implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serializer_version"
}
